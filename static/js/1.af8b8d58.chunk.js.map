{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.css"],"names":["module","exports","CheckoutSummary","ContactData","checkoutSummary","props","react_default","a","createElement","className","classes","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","Object","defineProperty","setState","_this2","this","formElementsArray","key","push","id","config","form","onSubmit","map","formElement","Input","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","Redirect","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","InputElement","Invalid","assign","join","onChange","option","Label","label"],"mappings":"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","file":"static/js/1.af8b8d58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>Enjoy!</h1>\r\n            <div style={{width:'100%', margin:'auto'}}>\r\n                <Burger ingredients = {props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked = {props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked = {props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {updateObject, checkValidity} from '../../../shared/utility';\r\n\r\nclass ContactData extends Component{\r\n    state={\r\n        orderForm:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zipCode:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP Code'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5,\r\n                    isNumeric:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your email'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod:{\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options: [\r\n                        {value: 'fastest', displayValue:'Fastest'},\r\n                        {value: 'cheapest', displayValue:'Cheapest'}\r\n                    ]\r\n                },\r\n                value:'fastest',\r\n                valid:true,\r\n                validation:{}\r\n            }\r\n        },\r\n        formIsValid:false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const order = {\r\n           ingredients: this.props.ings,\r\n           price:this.props.price, \r\n           orderData:formData,\r\n           userId: this.props.userId\r\n        }\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n            value:event.target.value,\r\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n            touched: true,\r\n        });\r\n        const updatedOrderForm = updateObject(this.state.orderForm, {\r\n            [inputIdentifier]:updatedFormElement\r\n        });\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n        }\r\n        this.setState({orderForm:updatedOrderForm, formIsValid:formIsValid});\r\n    }\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (<form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input\r\n                        key={formElement.id} \r\n                        elementType={formElement.config.elementType}   \r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched= {formElement.config.touched}                \r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                    ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n        </form>);\r\n        if(this.state.loading){\r\n            form=<Spinner/>;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, {Component} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component{\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render() {\r\n        let summary = <Redirect to =\"/\"/>\r\n        \r\n        if(this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n            <div>\r\n            {purchasedRedirect}\r\n            <CheckoutSummary \r\n            ingredients ={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler}/>\r\n            <Route \r\n            path={this.props.match.path + '/contact-data'}\r\n            component={ContactData} />\r\n            </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType){\r\n        case('input'):\r\n        inputElement = <input \r\n        className={inputClasses.join(' ')} \r\n        {...props.elementConfig} \r\n        value={props.value}\r\n        onChange={props.changed}/>;\r\n        break;\r\n        case('textarea'):\r\n        inputElement=<textarea \r\n        className={classes.InputElement} \r\n        {...props.elementConfig} \r\n        value={props.value}\r\n        onChange/>;\r\n        break;\r\n        case('select'):\r\n        inputElement=(\r\n        <select \r\n            className={classes.InputElement} \r\n            value={props.value}\r\n            onChange ={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.displayValue}\r\n                </option>\r\n            ))}\r\n        </select>);\r\n        break;\r\n        default:\r\n        inputElement = <input \r\n        className={classes.InputElement} \r\n        {...props.elementConfig} \r\n        value={props.value}/>\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};"],"sourceRoot":""}