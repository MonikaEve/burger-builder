{"version":3,"sources":["containers/Auth/Auth.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","componentDidMount","_this","props","buildingBurger","authRedirectPath","onSetAuthRedirectPath","inputChangedHandler","event","controlName","updatedControls","updateObject","Object","C_Users_Monika_ReactCourse_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","onAuth","switchAuthModeHandler","prevState","_this2","this","formElementsArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_10__","invalid","shouldValidate","changed","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_11__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","InputElement","Invalid","assign","join","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/3.011a4250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\"};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.css';\r\nimport {updateObject, checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Email address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    };\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = updateObject(this.state.controls, {\r\n            [controlName]: updateObject(this.state.controls[controlName], {\r\n                value:event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched:true\r\n            })\r\n        });\r\n        this.setState({controls:updatedControls});\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        })\r\n    }\r\n    render () {\r\n        const formElementsArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            });\r\n        }\r\n       \r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}   \r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched= {formElement.config.touched}                \r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n        ));\r\n        \r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                clicked={this.switchAuthModeHandler}\r\n                btnType=\"Danger\"> SWITCH TO {this.state.isSignup ? 'SIGN IN' : 'SIGN UP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading:state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/')),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType){\r\n        case('input'):\r\n        inputElement = <input \r\n        className={inputClasses.join(' ')} \r\n        {...props.elementConfig} \r\n        value={props.value}\r\n        onChange={props.changed}/>;\r\n        break;\r\n        case('textarea'):\r\n        inputElement=<textarea \r\n        className={classes.InputElement} \r\n        {...props.elementConfig} \r\n        value={props.value}\r\n        onChange/>;\r\n        break;\r\n        case('select'):\r\n        inputElement=(\r\n        <select \r\n            className={classes.InputElement} \r\n            value={props.value}\r\n            onChange ={props.changed}>\r\n            {props.elementConfig.options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                    {option.displayValue}\r\n                </option>\r\n            ))}\r\n        </select>);\r\n        break;\r\n        default:\r\n        inputElement = <input \r\n        className={classes.InputElement} \r\n        {...props.elementConfig} \r\n        value={props.value}/>\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};"],"sourceRoot":""}